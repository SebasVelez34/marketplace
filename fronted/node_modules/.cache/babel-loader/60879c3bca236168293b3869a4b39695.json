{"ast":null,"code":"import * as constants from '../constants/productConstants';\n\nconst axios = require(\"axios\");\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: constants.PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/products`);\n    dispatch({\n      type: constants.PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProductsCategory = () => async dispatch => {\n  try {\n    dispatch({\n      type: constants.PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/products`);\n    dispatch({\n      type: constants.PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: constants.PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${productId}`);\n    dispatch({\n      type: constants.PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst productsCategories = () => async dispatch => {\n  try {\n    dispatch({\n      type: constants.PRODUCT_CATEGORY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/categories/`);\n    console.log(data);\n    dispatch({\n      type: constants.PRODUCT_CATEGORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: constants.PRODUCT_CATEGORY_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, productsCategories };","map":{"version":3,"sources":["D:/Development_Projects/marketplace/fronted/src/actions/productActions.js"],"names":["constants","axios","require","listProducts","dispatch","type","PRODUCT_LIST_REQUEST","data","get","PRODUCT_LIST_SUCCESS","payload","error","PRODUCT_LIST_FAIL","message","listProductsCategory","detailsProduct","productId","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","productsCategories","PRODUCT_CATEGORY_REQUEST","console","log","PRODUCT_CATEGORY_SUCCESS","PRODUCT_CATEGORY_FAIL"],"mappings":"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","sourcesContent":["import * as constants from '../constants/productConstants';\r\nconst axios = require(\"axios\");\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type : constants.PRODUCT_LIST_REQUEST});\r\n        const { data } = await axios.get(`/api/v1/products`);\r\n        dispatch({ type: constants.PRODUCT_LIST_SUCCESS, payload : data });\r\n    } catch (error) {\r\n        dispatch({ type: constants.PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst listProductsCategory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type : constants.PRODUCT_LIST_REQUEST});\r\n        const { data } = await axios.get(`/api/v1/products`);\r\n        dispatch({ type: constants.PRODUCT_LIST_SUCCESS, payload : data });\r\n    } catch (error) {\r\n        dispatch({ type: constants.PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type : constants.PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const { data } = await axios.get(`/api/v1/product/${productId}`);\r\n        dispatch({ type: constants.PRODUCT_DETAILS_SUCCESS, payload : data });\r\n    } catch (error) {\r\n        dispatch({ type: constants.PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst productsCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type : constants.PRODUCT_CATEGORY_REQUEST});\r\n        const { data } = await axios.get(`/api/v1/categories/`);\r\n        console.log(data);\r\n        dispatch({ type: constants.PRODUCT_CATEGORY_SUCCESS, payload : data });\r\n    } catch (error) {\r\n        dispatch({ type: constants.PRODUCT_CATEGORY_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nexport { listProducts, detailsProduct, productsCategories }"]},"metadata":{},"sourceType":"module"}